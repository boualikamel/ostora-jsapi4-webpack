(function(){(this||window).webpackJsonp.registerAbsMids({"esri/layers/support/ElevationQuery":556,"esri/layers/support/ElevationSampler":2408,"esri/layers/support/ElevationTile":2409})})(),(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{2408:function(e,t,n){var i,o;i=[n.dj.c(e.i),t,n(11),n(28),n(34),n(3),n(69),n(80),n(162),n(44)],void 0===(o=function(e,t,n,i,r,o,a,p,l,s){function u(e,t){var n,i,o=c(e,t.spatialReference);if(!o)return null;switch(e.type){case"point":n=o,i=t,e.z=i.elevationAt(n)||0;break;case"polyline":!function(e,t,n){R.spatialReference=t.spatialReference;for(var i=e.hasM&&!e.hasZ,o=0;o<e.paths.length;o++)for(var r=e.paths[o],a=t.paths[o],l=0;l<r.length;l++){var s=r[l],u=a[l];R.x=u[0],R.y=u[1];var c=n.elevationAt(R)||0;i&&(s[3]=s[2]),s[2]=c}e.hasZ=!0}(e,o,t);break;case"multipoint":!function(e,t,n){R.spatialReference=t.spatialReference;for(var i=e.hasM&&!e.hasZ,o=0;o<e.points.length;o++){var r=e.points[o],a=t.points[o];R.x=a[0],R.y=a[1];var l=n.elevationAt(R)||0;i&&(r[3]=r[2]),r[2]=l}e.hasZ=!0}(e,o,t);break;default:r.neverReached(e)}return e}function c(e,t){var n=e.spatialReference;return n.equals(t)?e:s.canProject(n,t)?s.project(e,t):(f.error("Cannot project geometry spatial reference (wkid:"+n.wkid+") to elevation sampler spatial reference (wkid:"+t.wkid+")"),null)}Object.defineProperty(t,"__esModule",{value:!0});var f=o.getLogger("esri.layers.support.ElevationSampler"),h=(v.prototype.queryElevation=function(e){return u(e.clone(),this)},v.prototype.on=function(){return w},v.prototype.projectIfRequired=function(e,t){return c(e,t)},v);function v(){}t.ElevationSamplerBase=h;var d,m=(n(y,d=h),Object.defineProperty(y.prototype,"spatialReference",{get:function(){return this.extent.spatialReference},enumerable:!0,configurable:!0}),y.prototype.contains=function(e){var t=this.projectIfRequired(e,this.spatialReference);return l.extentContainsPoint(this.extent,t)},y.prototype.elevationAt=function(e){var t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;if(!this.contains(e)){var n=this.extent,i=n.xmin+", "+n.ymin+", "+n.xmax+", "+n.ymax;f.warn("#elevationAt()","Point used to sample elevation ("+e.x+", "+e.y+") is outside of the sampler extent ("+i+")")}return this.tile.sample(t.x,t.y)},y);function y(e,t,n){var i=d.call(this)||this;i.tile=e,i.noDataValue=n,i.extent=p.toExtent(e.tile.extent,t.spatialReference);var o=a.getMetersPerUnitForSR(t.spatialReference),r=t.lodAt(e.tile.level).resolution*o;return i.demResolution={min:r,max:r},i}t.TileElevationSampler=m;var x,T=(n(g,x=h),Object.defineProperty(g.prototype,"spatialReference",{get:function(){return this.extent.spatialReference},enumerable:!0,configurable:!0}),g.prototype.elevationAt=function(e){var t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;for(var n=0,i=this.samplers;n<i.length;n++){var o=i[n];if(o.contains(t))return o.elevationAt(t)}return f.warn("#elevationAt()","Point used to sample elevation ("+e.x+", "+e.y+") is outside of the sampler"),null},g);function g(e,t,n){var i,o=x.call(this)||this;"number"==typeof t?(o.noDataValue=t,i=null):(i=t,o.noDataValue=n),o.samplers=i?e.map(function(e){return new m(e,i,o.noDataValue)}):e;var r=o.samplers[0];if(r){o.extent=r.extent.clone();var a=r.demResolution,l=a.min,s=a.max;o.demResolution={min:l,max:s};for(var u=1;u<o.samplers.length;u++){var c=o.samplers[u];o.extent.union(c.extent),o.demResolution.min=Math.min(o.demResolution.min,c.demResolution.min),o.demResolution.max=Math.max(o.demResolution.max,c.demResolution.max)}}else o.extent=p.toExtent(p.create(),i.spatialReference),o.demResolution={min:0,max:0};return o}t.MultiTileElevationSampler=T,t.updateGeometryElevation=u;var R=new i.Point,w={remove:function(){}}}.apply(null,i))||(e.exports=o)},2409:function(e,t,n){var i,o;i=[n.dj.c(e.i),t],void 0===(o=function(e,t){function T(e,t,n){return e<t?t:n<e?n:e}Object.defineProperty(t,"__esModule",{value:!0});var n=(i.prototype.sample=function(e,t){if(this.samplerData)return function(e,t,n){var i=e.safeWidth,o=e.width,r=e.pixelData,a=e.noDataValue,l=T(e.dy*(e.y1-n),0,i),s=T(e.dx*(t-e.x0),0,i),u=Math.floor(l),c=Math.floor(s),p=u*o+c,f=p+o,h=r[p],v=r[f],d=r[p+1],m=r[f+1];if(h!==a&&v!==a&&d!==a&&m!==a){var y=s-c,x=h+(d-h)*y;return x+(v+(m-v)*y-x)*(l-u)}}(this.samplerData,e,t)},i);function i(e,t){if(this.tile=e,t){var n=this.tile.extent;this.samplerData={pixelData:t.values,width:t.width,height:t.height,safeWidth:.99999999*(t.width-1),noDataValue:t.noDataValue,dx:(t.width-1)/(n[2]-n[0]),dy:(t.width-1)/(n[3]-n[1]),x0:n[0],y1:n[3]}}else this.samplerData=null}t.ElevationTile=n,t.default=n}.apply(null,i))||(e.exports=o)},556:function(e,t,n){var i,o;i=[n.dj.c(e.i),t,n(5),n(10),n(11),n(9),n(49),n(235),n(6),n(4),n(69),n(209),n(43),n(153),n(80),n(44),n(2408),n(2409)],void 0===(o=function(e,t,u,p,n,f,o,s,c,h,l,v,d,m,y,x,T,r){function i(e,t){var n=e.lods.length-1;if(0<t){var i=o.findIndex(e.lods,function(e){return e.resolution<t});0===i?n=0:0<i&&(n=i-1)}return n}Object.defineProperty(t,"__esModule",{value:!0});var a=(g.prototype.queryAll=function(a,l,s){return p(this,void 0,void 0,function(){var t,n,i,o,r;return f(this,function(e){switch(e.label){case 0:return(a=s&&s.ignoreInvisibleLayers?a.filter(function(e){return e.visible}):a.slice()).length?(t=R.fromGeometry(l),n=!1,s&&s.returnSampleInfo||(n=!0),i=u({noDataValue:0,maximumAutoTileRequests:20},s,{returnSampleInfo:!0,demResolution:"auto"}),[4,this.query(a[a.length-1],t,i)]):[2,h.reject(new c("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from"))];case 1:return o=e.sent(),[4,this._queryAllContinue(a,o,i)];case 2:return(r=e.sent()).geometry=r.geometry.export(),n&&delete r.sampleInfo,[2,r]}})})},g.prototype.query=function(n,i,o){return p(this,void 0,void 0,function(){var t;return f(this,function(e){switch(e.label){case 0:return n?i&&(i instanceof R||"point"===i.type||"multipoint"===i.type||"polyline"===i.type)?(o=u({noDataValue:0,demResolution:"auto",minDemResolution:0,maximumAutoTileRequests:20,returnSampleInfo:!1},o),t=new q(n,i.spatialReference,o),[4,n.load(o)]):[2,h.reject(new c("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation"))]:[2,h.reject(new c("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from"))];case 1:return e.sent(),this._createGeometryDescriptor(t,i),[4,this._selectTiles(t)];case 2:return e.sent(),[4,this._populateElevationTiles(t)];case 3:return e.sent(),this._sampleGeometryWithElevation(t),[2,this._createQueryResult(t)]}})})},g.prototype.createSampler=function(t,n,i){return p(this,void 0,void 0,function(){return f(this,function(e){return t?n&&"extent"===n.type?(i=u({noDataValue:0,demResolution:"auto",maximumAutoTileRequests:20,returnSampleInfo:!1},i),[2,this._createSampler(t,n,i)]):[2,h.reject(new c("elevation-query:invalid-extent","Invalid or undefined extent"))]:[2,h.reject(new c("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from"))]})})},g.prototype.createSamplerAll=function(i,o,r){return p(this,void 0,void 0,function(){var t,n;return f(this,function(e){switch(e.label){case 0:return(i=r&&r.ignoreInvisibleLayers?i.filter(function(e){return e.visible}):i.slice()).length?o&&"extent"===o.type?(t=u({noDataValue:0,maximumAutoTileRequests:20},r,{returnSampleInfo:!0,demResolution:"auto"}),[4,this._createSampler(i[i.length-1],o,t)]):[2,h.reject(new c("elevation-query:invalid-extent","Invalid or undefined extent"))]:[2,h.reject(new c("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from"))];case 1:return n=e.sent(),[2,this._createSamplerAllContinue(i,o,n,t)]}})})},g.prototype._createSampler=function(o,r,a,l){return p(this,void 0,void 0,function(){var t,n,i;return f(this,function(e){switch(e.label){case 0:return[4,o.load()];case 1:if(e.sent(),t=r.spatialReference,n=o.tileInfo.spatialReference,!t.equals(n)){if(!x.canProject(t,n))return[2,h.reject(new c("elevation-query:invalid-extent","Extent spatial reference ("+t.wkid+") must be compatible with tile spatial reference ("+n.wkid+")"))];r=x.project(r,n)}return i=new A(o,r,a,l),[4,this._selectTiles(i)];case 2:return e.sent(),[4,this._populateElevationTiles(i)];case 3:return e.sent(),[2,new T.MultiTileElevationSampler(i.elevationTiles,i.layer.tileInfo,i.options.noDataValue)]}})})},g.prototype._createSamplerAllContinue=function(r,a,l,s){return p(this,void 0,void 0,function(){var t,n,i,o;return f(this,function(e){switch(e.label){case 0:return r.pop(),r.length?(t=l.samplers.map(function(e){return y.fromExtent(e.extent)}),[4,this._createSampler(r[r.length-1],a,s,t)]):[2,l];case 1:return 0===(n=e.sent()).samplers.length?[2,l]:(i=l.samplers.concat(n.samplers),o=new T.MultiTileElevationSampler(i,s.noDataValue),[2,this._createSamplerAllContinue(r,a,o,s)])}})})},g.prototype._queryAllContinue=function(s,u,c){return p(this,void 0,void 0,function(){var n,i,t,o,r,a,l;return f(this,function(e){switch(e.label){case 0:if(n=s.pop(),u.geometry.coordinates.forEach(function(e,t){0<=u.sampleInfo[t].demResolution&&!u.sampleInfo[t].source&&(u.sampleInfo[t].source=n)}),!s.length)return[2,u];for(i=u.geometry.coordinates,t=[],o=[],r=0;r<i.length;r++)u.sampleInfo[r].demResolution<0&&(t.push(i[r]),o.push(r));return 0===t.length?[2,u]:(a=u.geometry.clone(t),[4,this.query(s[s.length-1],a,c)]);case 1:return l=e.sent(),o.forEach(function(e,t){i[e].z=l.geometry.coordinates[t].z,u.sampleInfo[e].demResolution=l.sampleInfo[t].demResolution}),[2,this._queryAllContinue(s,u,c)]}})})},g.prototype._createQueryResult=function(e){var t={geometry:(e.outSpatialReference.equals(e.geometry.spatialReference)?e.geometry:e.geometry.project(e.outSpatialReference)).export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(t.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(function(e){e.tile=null,e.elevationTile=null}),t},g.prototype._createGeometryDescriptor=function(e,t){var n,i=e.layer.tileInfo.spatialReference;if(!(n=t instanceof R?t.project(i):x.project(t,i)))throw new c("elevation-query:spatial-reference-mismatch","Cannot query elevation in '"+t.spatialReference.wkid+"' on an elevation service in '"+i.wkid+"'");e.geometry=R.fromGeometry(n)},g.prototype._selectTiles=function(n){return p(this,void 0,void 0,function(){var t;return f(this,function(e){switch(e.label){case 0:return t=n.options.demResolution,"geometry"===n.type&&this._preselectOutsideLayerExtent(n),"number"!=typeof t?[3,1]:(this._selectTilesClosestResolution(n),[3,6]);case 1:return"finest-contiguous"!==t?[3,3]:[4,this._selectTilesFinestContiguous(n)];case 2:return e.sent(),[3,6];case 3:return"auto"!==t?[3,5]:[4,this._selectTilesAuto(n)];case 4:return e.sent(),[3,6];case 5:throw new c("elevation-query:invalid-dem-resolution","Invalid dem resolution value '"+t+'\', expected a number, "finest-contiguous" or "auto"');case 6:return[2]}})})},g.prototype._preselectOutsideLayerExtent=function(e){var i=new r.ElevationTile(null);i.sample=function(){return e.options.noDataValue},e.outsideExtentTile=i;var o=e.layer.fullExtent;e.geometry.coordinates.forEach(function(e){var t=e.x,n=e.y;(t<o.xmin||t>o.xmax||n<o.ymin||n>o.ymax)&&(e.elevationTile=i)})},g.prototype._selectTilesClosestResolution=function(e){var t=e.layer.tileInfo,n=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(n)},g.prototype._findNearestDemResolutionLODIndex=function(e,t){for(var n=t/l.getMetersPerUnitForSR(e.spatialReference),i=e.lods[0],o=0,r=1;r<e.lods.length;r++){var a=e.lods[r];Math.abs(a.resolution-n)<Math.abs(i.resolution-n)&&(i=a,o=r)}return o},g.prototype._selectTilesFinestContiguous=function(n){return p(this,void 0,void 0,function(){var t;return f(this,function(e){switch(e.label){case 0:return t=i(n.layer.tileInfo,n.options.minDemResolution),[4,this._selectTilesFinestContiguousAt(n,t)];case 1:return e.sent(),[2]}})})},g.prototype._selectTilesFinestContiguousAt=function(r,a){return p(this,void 0,void 0,function(){var t,n,i,o;return f(this,function(e){switch(e.label){case 0:if(t=r.layer,r.selectTilesAtLOD(a),a<0)return[2];n=t.tilemapCache,i=r.getTilesToFetch(),e.label=1;case 1:return e.trys.push([1,6,,8]),n?[4,h.all(i.map(function(e){return n.fetchAvailability(e.level,e.row,e.col,{signal:r.options.signal})}))]:[3,3];case 2:return e.sent(),[3,5];case 3:return[4,this._populateElevationTiles(r)];case 4:if(e.sent(),!r.allElevationTilesFetched())throw r.clearElevationTiles(),new c("elevation-query:has-unavailable-tiles");e.label=5;case 5:return[3,8];case 6:if(o=e.sent(),h.isAbortError(o))throw o;return[4,this._selectTilesFinestContiguousAt(r,a-1)];case 7:return e.sent(),[3,8];case 8:return[2]}})})},g.prototype._populateElevationTiles=function(o){return p(this,void 0,void 0,function(){var t,n,i;return f(this,function(e){switch(e.label){case 0:return t=o.getTilesToFetch(),n={},i=t.map(function(t){return o.layer.fetchTile(t.level,t.row,t.col,{noDataValue:o.options.noDataValue,signal:o.options.signal}).then(function(e){return n[t.id]=new r.ElevationTile(t,e)})}),[4,h.eachAlways(i)];case 1:return e.sent(),h.throwIfAborted(o.options.signal),o.populateElevationTiles(n),[2]}})})},g.prototype._selectTilesAuto=function(l){return p(this,void 0,void 0,function(){var o,t,r,n,a=this;return f(this,function(e){switch(e.label){case 0:return this._selectTilesAutoFinest(l),this._reduceTilesForMaximumRequests(l),(o=l.layer.tilemapCache)?(t=l.getTilesToFetch(),r={},n=t.map(function(i){return p(a,void 0,void 0,function(){var t,n;return f(this,function(e){switch(e.label){case 0:return t={id:null,level:0,row:0,col:0,extent:y.create()},[4,s.result(o.fetchAvailabilityUpsample(i.level,i.row,i.col,t,{signal:l.options.signal}))];case 1:if(!1===(n=e.sent()).ok&&h.isAbortError(n.error))throw n.error;return!0===n.ok&&(r[i.id]=t),[2]}})})}),[4,h.all(n)]):[2,this._selectTilesAutoPrefetchUpsample(l)];case 1:return e.sent(),l.remapTiles(r),[2]}})})},g.prototype._reduceTilesForMaximumRequests=function(t){function n(e){e.id in a?a[e.id]++:(a[e.id]=1,r++)}function i(e){var t=a[e.id];1===t?(delete a[e.id],r--):a[e.id]=t-1}var o=t.layer.tileInfo,r=0,a={};t.forEachTileToFetch(n,i);for(var l=!0;l&&(l=!1,t.forEachTileToFetch(function(e){r<=t.options.maximumAutoTileRequests||(i(e),o.upsampleTile(e)&&(l=!0),n(e))},i),l););},g.prototype._selectTilesAutoFinest=function(e){var t=i(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)},g.prototype._selectTilesAutoPrefetchUpsample=function(t){return p(this,void 0,void 0,function(){var n,i;return f(this,function(e){switch(e.label){case 0:return n=t.layer.tileInfo,[4,this._populateElevationTiles(t)];case 1:return e.sent(),i=!1,t.forEachTileToFetch(function(e,t){n.upsampleTile(e)?i=!0:t()}),i?[4,this._selectTilesAutoPrefetchUpsample(t)]:[3,3];case 2:e.sent(),e.label=3;case 3:return[2]}})})},g.prototype._sampleGeometryWithElevation=function(o){o.geometry.coordinates.forEach(function(e){var t=e.elevationTile,n=o.options.noDataValue;if(t){var i=t.sample(e.x,e.y);void 0!==i?n=i:e.elevationTile=null}e.z=n})},g.prototype._extractSampleInfo=function(n){var i=n.layer.tileInfo,o=l.getMetersPerUnitForSR(i.spatialReference);return n.geometry.coordinates.map(function(e){var t=-1;return e.elevationTile&&e.elevationTile!==n.outsideExtentTile&&(t=i.lodAt(e.elevationTile.tile.level).resolution*o),{demResolution:t}})},g);function g(){}t.ElevationQuery=a;var R=(w.prototype.export=function(){return this._exporter(this.coordinates,this.spatialReference)},w.prototype.clone=function(e){var t=this,n=new w;return n.geometry=this.geometry,n.spatialReference=this.spatialReference,n.coordinates=e||this.coordinates.map(function(e){return t._cloneCoordinate(e)}),n._exporter=this._exporter,n},w.prototype.project=function(e){var n=this;if(this.spatialReference.equals(e))return this.clone();if(x.canProject(this.spatialReference,e)){var i=e.isWGS84?x.xyToLngLat:x.lngLatToXY,o=[0,0],t=this.coordinates.map(function(e){var t=n._cloneCoordinate(e);return i(t.x,t.y,o),t.x=o[0],t.y=o[1],t}),r=this.clone(t);return r.spatialReference=e,r}return null},w.prototype._cloneCoordinate=function(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}},w.fromGeometry=function(o){var t=new w;if(t.geometry=o,t.spatialReference=o.spatialReference,o instanceof w)t.coordinates=o.coordinates.map(function(e){return t._cloneCoordinate(e)}),t._exporter=function(e,t){var n=o.clone(e);return n.spatialReference=t,n};else switch(o.type){case"point":var e=o;o.hasM?t.coordinates=[{x:e.x,y:e.y,m:e.m}]:t.coordinates=[{x:e.x,y:e.y}],t._exporter=function(e,t){return o.hasM?new d(e[0].x,e[0].y,e[0].z,e[0].m,t):new d(e[0].x,e[0].y,e[0].z,t)};break;case"multipoint":var n=o;t.coordinates=n.points.map(function(e){if(o.hasM){var t=o.hasZ?3:2;return{x:e[0],y:e[1],m:e[t]}}return{x:e[0],y:e[1]}}),t._exporter=function(e,t){return o.hasM?new v({points:e.map(function(e){return[e.x,e.y,e.z,e.m]}),hasZ:!0,hasM:!0,spatiaReference:t}):new v(e.map(function(e){return[e.x,e.y,e.z]}),t)};break;case"polyline":var i=[],r=[],a=0;o.paths.forEach(function(e){r.push([a,a+e.length]),a+=e.length,i.push.apply(i,e.map(function(e){if(o.hasM){var t=o.hasZ?3:2;return{x:e[0],y:e[1],m:e[t]}}return{x:e[0],y:e[1]}}))}),t.coordinates=i,t._exporter=function(e,t){var n=o.hasM?e.map(function(e){return[e.x,e.y,e.z,e.m]}):e.map(function(e){return[e.x,e.y,e.z]}),i=r.map(function(e){return n.slice(e[0],e[1])});return new m({paths:i,hasM:o.hasM,hasZ:!0,spatialReference:t})}}return t},w);function w(){}t.GeometryDescriptor=R;function _(e,t){this.layer=e,this.options=t}var E,b,q=(n(D,b=_),D.prototype.selectTilesAtLOD=function(e){if(e<0)this.geometry.coordinates.forEach(function(e){return e.tile=null});else{var t=this.layer.tileInfo,n=t.lods[e].level;this.geometry.coordinates.forEach(function(e){e.tile=t.tileAt(n,e.x,e.y)})}},D.prototype.allElevationTilesFetched=function(){return!this.geometry.coordinates.some(function(e){return!e.elevationTile})},D.prototype.clearElevationTiles=function(){for(var e=0,t=this.geometry.coordinates;e<t.length;e++){var n=t[e];n.elevationTile!==this.outsideExtentTile&&(n.elevationTile=null)}},D.prototype.populateElevationTiles=function(e){for(var t=0,n=this.geometry.coordinates;t<n.length;t++){var i=n[t];!i.elevationTile&&i.tile&&(i.elevationTile=e[i.tile.id])}},D.prototype.remapTiles=function(e){for(var t=0,n=this.geometry.coordinates;t<n.length;t++){var i=n[t];i.tile=e[i.tile.id]}},D.prototype.getTilesToFetch=function(){for(var e={},t=[],n=0,i=this.geometry.coordinates;n<i.length;n++){var o=i[n],r=o.tile;o.elevationTile||!o.tile||e[r.id]||(e[r.id]=r,t.push(r))}return t},D.prototype.forEachTileToFetch=function(t){for(var e=0,n=this.geometry.coordinates;e<n.length;e++)!function(e){e.tile&&!e.elevationTile&&t(e.tile,function(){return e.tile=null})}(n[e])},D),A=(n(I,E=_),I.prototype.selectTilesAtLOD=function(e,t){var n=this._maximumLodForRequests(t),i=Math.min(n,e);i<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(i)},I.prototype._maximumLodForRequests=function(e){var t=this.layer.tileInfo;if(!e)return t.lods.length-1;for(var n=this.extent,i=t.lods.length-1;0<=i;i--){var o=t.lods[i],r=o.resolution*t.size[0],a=o.resolution*t.size[1];if(Math.ceil(n.width/r)*Math.ceil(n.height/a)<=e)return i}return-1},I.prototype.allElevationTilesFetched=function(){return this.candidateTiles.length===this.elevationTiles.length},I.prototype.clearElevationTiles=function(){this.elevationTiles.length=0,this.fetchedCandidates.clear()},I.prototype.populateElevationTiles=function(e){for(var t=0,n=this.candidateTiles;t<n.length;t++){var i=n[t],o=e[i.id];o&&(this.fetchedCandidates.add(i),this.elevationTiles.push(o))}},I.prototype.remapTiles=function(t){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map(function(e){return t[e.id]}))},I.prototype.getTilesToFetch=function(){return this.candidateTiles},I.prototype.forEachTileToFetch=function(n,i){var o=this,e=this.candidateTiles;this.candidateTiles=[],e.forEach(function(e){if(o.fetchedCandidates.has(e))i&&i(e);else{var t=!1;n(e,function(){return t=!0}),t?i&&i(e):o.candidateTiles.push(e)}}),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,i)},I.prototype._uniqueNonOverlappingTiles=function(e,i){for(var t={},n=[],o=0,r=e;o<r.length;o++){var a=r[o];t[a.id]?i&&i(a):(t[a.id]=a,n.push(a))}var l=n.sort(function(e,t){return e.level-t.level});return l.filter(function(e,t){for(var n=0;n<t;n++)if(y.contains(l[n].extent,e.extent))return i&&i(e),!1;return!0})},I.prototype._selectCandidateTilesCoveringExtentAt=function(e){this.candidateTiles.length=0;for(var t=this.layer.tileInfo,n=t.lods[e],i=this.extent,o=t.tileAt(n.level,i.xmin,i.ymin),r=n.resolution*t.size[0],a=n.resolution*t.size[1],l=Math.ceil((i.xmax-o.extent[0])/r),s=Math.ceil((i.ymax-o.extent[1])/a),u=0;u<s;u++)for(var c=0;c<l;c++){var p={id:null,level:o.level,row:o.row-u,col:o.col+c};t.updateTileInfo(p),this._tileIsMasked(p)||this.candidateTiles.push(p)}},I.prototype._tileIsMasked=function(t){return!!this.maskExtents&&this.maskExtents.some(function(e){return y.contains(e,t.extent)})},I);function I(e,t,n,i){var o=E.call(this,e,n)||this;return o.type="extent",o.elevationTiles=[],o.candidateTiles=[],o.fetchedCandidates=new Set,o.extent=t.intersection(e.fullExtent),o.maskExtents=i,o}function D(e,t,n){var i=b.call(this,e,n)||this;return i.type="geometry",i.outSpatialReference=t,i}t.getFinestLodIndex=i,t.default=a}.apply(null,i))||(e.exports=o)}}]);